# https://docs.docker.com/engine/install/fedora/
- block:
    - name: Install docker dependencies
      dnf:
        name: ['device-mapper-persistent-data', 'lvm2']
        state: latest

    - name: Add package to manage DNF repos
      dnf:
        name: dnf-plugins-core

    # don't think an ansible module for `dnf config-manager` exists yet:
    # https://github.com/ansible/ansible/issues/46963
    - name: Add docker repo for Fedora33
      command: dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo

    # the main repo (docker-ce-stable) doesn't have all docker rpms (as of 12/5/20)
    # .. but the docker-ce-test repo does, and seems usable
    # https://github.com/docker/for-linux/issues/1114#issuecomment-734269990
    #
    # It may be worth noting that some users are bypassing this issue by using the F33 repo for docker
    # https://github.com/docker/for-linux/issues/1114#issuecomment-736660591
    - name: Enable docker-ce-test
      command: dnf config-manager --set-enabled docker-ce-test

    - name: Install docker
      dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io

    - name: Enable backwards compatibility for Cgroups (requires REBOOT to take effect!)
      command: grubby --update-kernel=ALL --args="systemd.unified_cgroup_hierarchy=0"

    - name: Ensure /etc/docker exists
      file:
        path: /etc/docker
        state: directory
      become: true

    # Configuring Docker for minikube:
    # https://kubernetes.io/docs/setup/production-environment/container-runtimes/#docker
    #
    # Note: if docker already exists and this configuration is added may need to:
    # * sudo umount /var/lib/docker/btrfs
    # * sudo rm -rf /var/lib/docker
    # * sudo reboot
    # .. in order to clear out old storage system and give docker a fresh start
    - name: Configure docker to use systemd (for compatibility with minikube)
      blockinfile:
        marker: "# {mark} configure docker to use systemd (for compatibility with minikube)"
        path: /etc/docker/daemon.json
        create: yes
        block: |
          {
            "exec-opts": ["native.cgroupdriver=systemd"],
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "100m"
            },
            "storage-driver": "overlay2"
          }
      become: true

    - name: Enable docker service
      systemd:
        name: docker
        enabled: yes

    - name: Start docker service
      systemd:
        name: docker
        state: started

    - name: Run hello world container
      command: docker run hello-world

    # https://docs.docker.com/compose/install/
    # To ensure you have the latest version, check the Compose repository release page on GitHub:
    # https://github.com/docker/compose/releases (up-to-date as of 12/5/20)
    - name: Install docker-compose
      shell: curl -L https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m) -o /usr/bin/docker-compose
      args:
        warn: false  # use shell module instead of get_url in order to use `$()` in command

    - name: Make docker-compose executable
      file:
        dest: /usr/bin/docker-compose
        mode: 0755
  become: true

# https://techoverflow.net/2017/03/01/solving-docker-permission-denied-while-trying-to-connect-to-the-docker-daemon-socket/
# May want to use user module instead: https://docs.ansible.com/ansible/latest/modules/user_module.html
- name: Get current user
  shell: whoami
  register: shell

- name: Add {{ shell.stdout }} to docker group (so docker can be run w/out sudo)
  shell: usermod -a -G docker {{ shell.stdout }}
  become: true
