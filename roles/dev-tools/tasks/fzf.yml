- name: Determine if fzf installed
  shell: which fzf
  args:
    executable: /bin/bash
  ignore_errors: yes
  register: which_fzf

- block:
  # https://github.com/junegunn/fzf
  - name: Download fzf source
    git:
      dest: ~/.fzf
      repo: https://github.com/junegunn/fzf.git
      version: 0.21.1  # latest version as of 6/30/20

  - name: Build fzf
    shell: ./install
    args:
      executable: /bin/bash
      chdir: ~/.fzf
  when: which_fzf.rc != 0

# https://github.com/mileszs/ack.vim
- name: Install fzf.vim plugin
  git:
    repo: https://github.com/junegunn/fzf.vim
    dest: "~/.vim/bundle/fzf.vim"

- name: Add configuration for fzf.vim plugin
  blockinfile:
    path: ~/.vimrc
    block: |
      " Add .fzf to run-time path
      set rtp+=~/.fzf

      " Automatically use Ack!
      cnoreabbrev Ack Ack!
      nnoremap <Leader>a :Ack!<Space>

      " Shortcuts for Buffers, Files, Tags
      nmap ; :Buffers<CR>
      nmap <Leader>f :Files<CR>
      nmap <Leader>t :Tags<CR>
    marker: '" {mark} ANSIBLE MANAGED BLOCK - fzf.vim'

- name: Install fd requirements
  dnf:
    name: cargo
    state: present
  become: true

- name: Add .cargo/bin to PATH
  lineinfile:
    path: "~/.bashrc"
    line: export PATH=~/.cargo/bin:$PATH

- name: Determine if fd installed
  shell: PATH="~/.cargo/bin:$PATH" which fd
  args:
    executable: /bin/bash
  ignore_errors: yes
  register: which_fd

- name: Install fd
  shell: cargo install fd-find
  args:
    executable: /bin/bash
  # if fd found, make sure it refers to rust application (_not_ the floppy disk utility)
  when: which_fd.rc != 0 and ".cargo/bin/" not in which_fd.stdout

# Pipe fd results (instead of find's) to fzf; fd respects .[git]ignore files
# https://github.com/sharkdp/fd#using-fd-with-fzf
- name: Configure fzf to use fd
  blockinfile:
    path: ~/.bashrc
    block: |
      export FZF_DEFAULT_COMMAND='fd --type file'
      export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
    marker: "# {mark} ANSIBLE MANAGED BLOCK - fzf"
