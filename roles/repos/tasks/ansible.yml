- name: Add ansible project, branch {{ branch }}
  git:
    dest: ~/git/ansible-{{ branch }}
    repo: git@github.com:jladdjr/ansible.git
    accept_hostkey: yes
  tags: ansible

- name: Determine which remotes exist
  command: git remote -v
  args:
    chdir: ~/git/ansible-{{ branch }}
  register: git_remote
  tags: ansible

- name: Add remote repo (ansible)
  command: "{{ item }}"
  args:
    chdir: ~/git/ansible-{{ branch }}
  with_items:
    - git remote add ansible git@github.com:ansible/ansible.git
    - git fetch ansible
  when: git_remote.stdout.find('ansible/ansible') == -1
  tags: ansible

- name: Determine if branch already checked out
  command: git branch
  args:
    chdir: ~/git/ansible-{{ branch }}
  register: git_branch
  tags: ansible

- name: Check out new branch
  command: git checkout -b {{ branch }} ansible/{{ branch }}
  args:
    chdir: ~/git/ansible-{{ branch }}
  when: git_branch.stdout.find(branch) == -1
  tags: ansible

- name: Check out existing branch
  command: git checkout {{ branch }}
  args:
    chdir: ~/git/ansible-{{ branch }}
  when: git_branch.stdout.find(branch) != -1
  tags: ansible

- name: Push branch to personal repo
  command: git push --set-upstream origin
  args:
    chdir: ~/git/ansible-{{ branch }}
  tags: ansible

# Use --system-site-packages in order to use selinux package (provided by libselinux-python rpm)
# https://dmsimard.com/2016/01/08/selinux-python-virtualenv-chroot-and-ansible-dont-play-nice/
# https://github.com/ansible/ansible/issues/34340#issuecomment-355214723
- name: Create ansible virtualenv
  shell: . /usr/bin/virtualenvwrapper.sh && mkvirtualenv --python /usr/bin/python3 --system-site-packages ansible-{{ branch }}
  args:
    executable: /bin/bash
  environment:
    VIRTUALENVWRAPPER_PYTHON: /usr/bin/python3
  tags: ansible

- name: Add ansible requirements to venv
  shell: . /usr/bin/virtualenvwrapper.sh && workon ansible-{{ branch }} && pip install -U -r requirements.txt
  args:
    executable: /bin/bash
    chdir: ~/git/ansible-{{ branch }}
  environment:
    VIRTUALENVWRAPPER_PYTHON: /usr/bin/python3
  tags: ansible

- name: Create alias to source ansible
  lineinfile:
    path: ~/.bashrc
    line: alias ans='workon ansible-devel; source ~/git/ansible-devel/hacking/env-setup > /dev/null 2>&1; ansible --version | head -1'
  tags: ansible
  when: branch == "devel"

- name: Create aliases for ansible release branches
  blockinfile:
    path: ~/.bashrc
    block: |
      alias a{{ branch | replace('devel', '') | replace('stable-', '') | replace('.', '') }}="cd ~/git/ansible-{{ branch }}; git br | grep '*'; echo ''; workon ansible-{{ branch }}; source ~/git/ansible-devel/hacking/env-setup > /dev/null 2>&1; ansible --version | head -1"
    marker: "# {mark} ANSIBLE MANAGED BLOCK - ansible ({{ branch }})"
  tags: ansible

- name: Disable host key checking when running Ansible
  lineinfile:
    path: ~/.bashrc
    line: export ANSIBLE_HOST_KEY_CHECKING=False
  tags: ansible
  when: branch == "devel"

# https://docs.ansible.com/ansible/latest/reference_appendices/config.html#ansible-configuration-settings-locations
- name: Copy ansible.cfg to home directory
  copy:
    src: ansible/ansible.cfg
    dest: ~/.ansible.cfg
    mode: 0755
  tags: ansible
