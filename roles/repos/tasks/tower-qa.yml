- name: Add tower-qa project, branch {{ branch }}
  git:
    dest: /home/vagrant/git/tower-qa-{{ branch }}
    repo: git@github.com:jladdjr/tower-qa.git
    accept_hostkey: yes
  tags: tower-qa

- name: Determine which remotes exist
  command: git remote -v
  args:
    chdir: /home/vagrant/git/tower-qa-{{ branch }}
  register: git_remote
  tags: tower-qa

- name: Add remote repo (ansible)
  command: "{{ item }}"
  args:
    chdir: /home/vagrant/git/tower-qa-{{ branch }}
  with_items:
    - git remote add ansible git@github.com:ansible/tower-qa.git
    - git fetch ansible
  when: git_remote.stdout.find('ansible') == -1
  tags: tower-qa

- name: Check out branch
  command: git checkout {{ branch }}
  args:
    chdir: /home/vagrant/git/tower-qa-{{ branch }}
  tags: tower-qa

- name: Push branch to personal repo
  command: git push --set-upstream origin
  args:
    chdir: /home/vagrant/git/tower-qa-{{ branch }}
  tags: tower-qa

# Use --system-site-packages in order to use selinux package (provided by libselinux-python rpm)
# https://dmsimard.com/2016/01/08/selinux-python-virtualenv-chroot-and-ansible-dont-play-nice/
# https://github.com/ansible/ansible/issues/34340#issuecomment-355214723
- name: Create tower-qa virtualenv
  shell: . /usr/bin/virtualenvwrapper.sh && mkvirtualenv --python /usr/bin/python2 --system-site-packages tower-qa-{{ branch }}
  args:
    executable: /bin/bash
  environment:
    VIRTUALENVWRAPPER_PYTHON: /usr/bin/python3
  tags: tower-qa

# https://github.com/capless/warrant/issues/96#issuecomment-381503013
- name: Downgrade pip (pip 10 breaks towerkit)
  shell: . /usr/bin/virtualenvwrapper.sh && workon tower-qa-{{ branch }} && pip install pip==9.0.3
  args:
    executable: /bin/bash
  environment:
    VIRTUALENVWRAPPER_PYTHON: /usr/bin/python3
  tags: tower-qa

- name: Add tower-qa requirements to venv
  shell: . /usr/bin/virtualenvwrapper.sh && workon tower-qa-{{ branch }} && pip install -U -r requirements.txt
  args:
    executable: /bin/bash
    chdir: /home/vagrant/git/tower-qa-{{ branch }}
  environment:
    VIRTUALENVWRAPPER_PYTHON: /usr/bin/python3
  tags: tower-qa

- name: Also install ipython
  shell: . /usr/bin/virtualenvwrapper.sh && workon tower-qa-{{ branch }} && pip install ipython
  args:
    executable: /bin/bash
  environment:
    VIRTUALENVWRAPPER_PYTHON: /usr/bin/python3
  tags: tower-qa

# http://ipython.readthedocs.io/en/stable/config/intro.html#setting-configurable-options
- name: Place IPython config folder in mapped folder
  lineinfile:
    path: /home/vagrant/.bashrc
    line: export IPYTHONDIR=/home/vagrant/mapped/.ipython
  tags: tower-qa

- name: Create aliases for tower-qa
  blockinfile:
    path: /home/vagrant/.bashrc
    block: |
      alias v='source /usr/bin/virtualenvwrapper.sh'
      alias tq="cd /home/vagrant/git/tower-qa-master; git br | grep '*'; workon tower-qa-master"
      alias get_project_home='JDL_PROJECT_HOME=/home/vagrant/git/$(pwd | cut -d '/' -f 5)'
      alias t='get_project_home; cd ${JDL_PROJECT_HOME}/tests/api'
      alias f='get_project_home; cd ${JDL_PROJECT_HOME}/tests/lib/fixtures/api'
    marker: "# {mark} ANSIBLE MANAGED BLOCK - tower-qa"
  when: branch == "master"
  tags: tower-qa

- name: Create aliases for tower-qa release branches
  blockinfile:
    path: /home/vagrant/.bashrc
    block: |
      alias tq{{ branch | replace('release_', '') | replace('.', '') }}="cd /home/vagrant/git/tower-qa-{{ branch }}; git br | grep '*'; workon tower-qa-{{ branch }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK - tower-qa ({{ branch }})"
  when: branch != "master"
  tags: tower-qa

- name: Check if AWS creds already in place
  shell: cat /home/vagrant/.bashrc
  register: bashrc
  tags: tower-qa

- name: Create placeholder for AWS creds
  blockinfile:
    path: /home/vagrant/.bashrc
    block: |
      # Required by playbooks/inventory-ec2.py
      export AWS_ACCESS_KEY_ID='CHANGEME'
      export AWS_SECRET_ACCESS_KEY='CHANGEME'
    marker: "# {mark} ANSIBLE MANAGED BLOCK - AWS Creds"
  when: bashrc.stdout.find('AWS_ACCESS_KEY_ID') == -1
  tags: tower-qa
